<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt, neque euismod vulputate rutrum, purus dolor aliquet elit, vel consequat ipsum elit non urna. Phasellus ante erat, hendrerit ac odio et, porttitor euismod augue. Nunc quis vulputate libero, eget aliquet lorem. Maecenas auctor sed elit non scelerisque. Vestibulum tincidunt semper dui. Phasellus in fringilla turpis, at euismod arcu. Aenean dapibus condimentum vehicula. Fusce euismod augue ipsum, id luctus urna faucibus id. Nam lobortis lobortis mi, et vulputate erat adipiscing eget. Phasellus ornare suscipit consequat. Proin vitae facilisis nunc. Fusce a metus ipsum.

Sed lobortis, nibh ac sodales aliquet, turpis lectus pulvinar felis, eu ultrices lectus eros sed ante. In hac habitasse platea dictumst. Aenean auctor sagittis nibh, at feugiat mi gravida elementum. Sed sem eros, volutpat a tellus vel, tristique tristique augue. Proin lobortis ante quis leo rutrum tempor. Donec euismod nulla et neque tincidunt sollicitudin. Quisque et felis bibendum, euismod velit non, lobortis sem. Phasellus lorem magna, sollicitudin quis arcu in, venenatis aliquam elit. Sed non iaculis felis. Maecenas lacinia diam id faucibus ornare. Curabitur vel turpis congue, hendrerit dui ut, venenatis quam.

Integer quis vestibulum sapien. Donec id orci non ipsum eleifend vehicula. Maecenas imperdiet ornare tincidunt. Nullam eu cursus ante. Donec hendrerit dui enim, a facilisis neque facilisis sed. Nullam erat turpis, pretium ac lorem quis, porttitor fermentum massa. Pellentesque interdum nibh arcu, nec varius nunc vestibulum quis. Aliquam fermentum id dui ac dictum.

Proin id viverra metus, id vestibulum ante. Proin fringilla sapien sed est luctus feugiat. In dapibus, dui in adipiscing dictum, sapien tortor mattis risus, ut placerat risus nulla laoreet nisl. Vivamus a suscipit nisl. Maecenas ac auctor odio, non sollicitudin erat. Suspendisse posuere malesuada leo ac suscipit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.

Vestibulum at dolor felis. Pellentesque sollicitudin augue ac metus vehicula, id pulvinar lorem blandit. Sed fermentum leo et eros luctus vulputate. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Ut non nunc a justo blandit commodo id eget tellus. Vivamus eu facilisis neque. Morbi non rhoncus odio. Cras tincidunt libero non erat vestibulum, viverra eleifend massa iaculis. Nam ut elementum justo. Sed auctor iaculis suscipit. Maecenas vehicula enim eget mauris rutrum, lobortis sollicitudin nisi ornare. Aliquam tincidunt eget urna vitae tempus. Cras id augue feugiat, porta metus eu, porttitor augue. Sed eleifend at justo ac pretium. Suspendisse ut sodales lectus.</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>