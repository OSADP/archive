/*************************************************************************
 * 
 * SCSC CONFIDENTIAL
 * __________________
 * 
 * Copyright (c) [2009] - [2012] 
 * SubCarrier System Corp. (SCSC) 
 * All Rights Reserved.
 * 
 * NOTICE:  All information contained herein is, and remains,
 * the property of SubCarrier System Corp. (SCSC) and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to SubCarrier System Corp. (SCSC)
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from SubCarrier System Corp. (SCSC).
 *
 *
 * This file is subject to the terms and conditions of use defined 
 * in the files 'LICENSE.rft' or 'LICENSE.pdf' which is part of this 
 * source code package.
 *
 * LIC: #Battelle_001_01_dbfff42a90727d02153511a33480572b#
 */

/*
 * Generated by asn1c-0.9.22 (http://lionet.info/asn1c) [SCSCrev09]
 * From ASN.1 module "DSRC"
 * 	found in "DSRC_R36_Source.ASN"
 * 	`asn1c -S/skeletons`
 */

#include "stdafx.h"
#include <asn_internal.h> 
#include "VehicleStatus.h"

static asn_TYPE_member_t asn_MBR_wipers_4[] = {
	{ ATF_NOFLAGS, 0, offsetof(struct wipers, statusFront),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_WiperStatusFront,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"statusFront"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct wipers, rateFront),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_WiperRate,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"rateFront"
		},
	{ ATF_POINTER, 2, offsetof(struct wipers, statusRear),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_WiperStatusRear,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"statusRear"
		},
	{ ATF_POINTER, 1, offsetof(struct wipers, rateRear),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_WiperRate,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"rateRear"
		},
};
static ber_tlv_tag_t asn_DEF_wipers_tags_4[] = {
	(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_wipers_tag2el_4[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* statusFront at 2054 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* rateFront at 2055 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* statusRear at 2056 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 } /* rateRear at 2057 */
};
static asn_SEQUENCE_specifics_t asn_SPC_wipers_specs_4 = {
	sizeof(struct wipers),
	offsetof(struct wipers, _asn_ctx),
	asn_MAP_wipers_tag2el_4,
	4,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_wipers_4 = {
	"wipers",
	"wipers",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_wipers_tags_4,
	sizeof(asn_DEF_wipers_tags_4)
		/sizeof(asn_DEF_wipers_tags_4[0]) - 1, /* 1 */
	asn_DEF_wipers_tags_4,	/* Same as above */
	sizeof(asn_DEF_wipers_tags_4)
		/sizeof(asn_DEF_wipers_tags_4[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_wipers_4,
	4,	/* Elements count */
	&asn_SPC_wipers_specs_4	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_steering_16[] = {
	{ ATF_NOFLAGS, 0, offsetof(struct steering, angle),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SteeringWheelAngle,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"angle"
		},
	{ ATF_POINTER, 3, offsetof(struct steering, confidence),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SteeringWheelAngleConfidence,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"confidence"
		},
	{ ATF_POINTER, 2, offsetof(struct steering, rate),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SteeringWheelAngleRateOfChange,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"rate"
		},
	{ ATF_POINTER, 1, offsetof(struct steering, wheels),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_DrivingWheelAngle,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"wheels"
		},
};
static ber_tlv_tag_t asn_DEF_steering_tags_16[] = {
	(ASN_TAG_CLASS_CONTEXT | (10 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_steering_tag2el_16[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* angle at 2086 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* confidence at 2087 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* rate at 2088 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 } /* wheels at 2089 */
};
static asn_SEQUENCE_specifics_t asn_SPC_steering_specs_16 = {
	sizeof(struct steering),
	offsetof(struct steering, _asn_ctx),
	asn_MAP_steering_tag2el_16,
	4,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_steering_16 = {
	"steering",
	"steering",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_steering_tags_16,
	sizeof(asn_DEF_steering_tags_16)
		/sizeof(asn_DEF_steering_tags_16[0]) - 1, /* 1 */
	asn_DEF_steering_tags_16,	/* Same as above */
	sizeof(asn_DEF_steering_tags_16)
		/sizeof(asn_DEF_steering_tags_16[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_steering_16,
	4,	/* Elements count */
	&asn_SPC_steering_specs_16	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_accelSets_21[] = {
	{ ATF_POINTER, 5, offsetof(struct accelSets, accel4way),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_AccelerationSet4Way,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"accel4way"
		},
	{ ATF_POINTER, 4, offsetof(struct accelSets, vertAccelThres),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_VerticalAccelerationThreshold,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"vertAccelThres"
		},
	{ ATF_POINTER, 3, offsetof(struct accelSets, yawRateCon),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_YawRateConfidence,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"yawRateCon"
		},
	{ ATF_POINTER, 2, offsetof(struct accelSets, hozAccelCon),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_AccelerationConfidence,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"hozAccelCon"
		},
	{ ATF_POINTER, 1, offsetof(struct accelSets, confidenceSet),
		(ASN_TAG_CLASS_CONTEXT | (4 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_ConfidenceSet,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"confidenceSet"
		},
};
static ber_tlv_tag_t asn_DEF_accelSets_tags_21[] = {
	(ASN_TAG_CLASS_CONTEXT | (11 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_accelSets_tag2el_21[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* accel4way at 2093 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* vertAccelThres at 2094 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* yawRateCon at 2096 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 }, /* hozAccelCon at 2098 */
    { (ASN_TAG_CLASS_CONTEXT | (4 << 2)), 4, 0, 0 } /* confidenceSet at 2100 */
};
static asn_SEQUENCE_specifics_t asn_SPC_accelSets_specs_21 = {
	sizeof(struct accelSets),
	offsetof(struct accelSets, _asn_ctx),
	asn_MAP_accelSets_tag2el_21,
	5,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_accelSets_21 = {
	"accelSets",
	"accelSets",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_accelSets_tags_21,
	sizeof(asn_DEF_accelSets_tags_21)
		/sizeof(asn_DEF_accelSets_tags_21[0]) - 1, /* 1 */
	asn_DEF_accelSets_tags_21,	/* Same as above */
	sizeof(asn_DEF_accelSets_tags_21)
		/sizeof(asn_DEF_accelSets_tags_21[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_accelSets_21,
	5,	/* Elements count */
	&asn_SPC_accelSets_specs_21	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_object_27[] = {
	{ ATF_NOFLAGS, 0, offsetof(struct object, obDist),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_ObstacleDistance,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"obDist"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct object, obDirect),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_ObstacleDirection,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"obDirect"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct object, dateTime),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_DDateTime,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"dateTime"
		},
};
static ber_tlv_tag_t asn_DEF_object_tags_27[] = {
	(ASN_TAG_CLASS_CONTEXT | (12 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_object_tag2el_27[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* obDist at 2106 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* obDirect at 2107 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 } /* dateTime at 2109 */
};
static asn_SEQUENCE_specifics_t asn_SPC_object_specs_27 = {
	sizeof(struct object),
	offsetof(struct object, _asn_ctx),
	asn_MAP_object_tag2el_27,
	3,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_object_27 = {
	"object",
	"object",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_object_tags_27,
	sizeof(asn_DEF_object_tags_27)
		/sizeof(asn_DEF_object_tags_27[0]) - 1, /* 1 */
	asn_DEF_object_tags_27,	/* Same as above */
	sizeof(asn_DEF_object_tags_27)
		/sizeof(asn_DEF_object_tags_27[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_object_27,
	3,	/* Elements count */
	&asn_SPC_object_specs_27	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_vehicleData_35[] = {
	{ ATF_NOFLAGS, 0, offsetof(struct vehicleData, height),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_VehicleHeight,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"height"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct vehicleData, bumpers),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_BumperHeights,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"bumpers"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct vehicleData, mass),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_VehicleMass,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"mass"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct vehicleData, trailerWeight),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_TrailerWeight,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"trailerWeight"
		},
	{ ATF_NOFLAGS, 0, offsetof(struct vehicleData, type),
		(ASN_TAG_CLASS_CONTEXT | (4 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_VehicleType,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"type"
		},
};
static ber_tlv_tag_t asn_DEF_vehicleData_tags_35[] = {
	(ASN_TAG_CLASS_CONTEXT | (17 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_vehicleData_tag2el_35[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* height at 2120 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* bumpers at 2121 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* mass at 2122 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 }, /* trailerWeight at 2123 */
    { (ASN_TAG_CLASS_CONTEXT | (4 << 2)), 4, 0, 0 } /* type at 2126 */
};
static asn_SEQUENCE_specifics_t asn_SPC_vehicleData_specs_35 = {
	sizeof(struct vehicleData),
	offsetof(struct vehicleData, _asn_ctx),
	asn_MAP_vehicleData_tag2el_35,
	5,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_vehicleData_35 = {
	"vehicleData",
	"vehicleData",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_vehicleData_tags_35,
	sizeof(asn_DEF_vehicleData_tags_35)
		/sizeof(asn_DEF_vehicleData_tags_35[0]) - 1, /* 1 */
	asn_DEF_vehicleData_tags_35,	/* Same as above */
	sizeof(asn_DEF_vehicleData_tags_35)
		/sizeof(asn_DEF_vehicleData_tags_35[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_vehicleData_35,
	5,	/* Elements count */
	&asn_SPC_vehicleData_specs_35	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_weatherReport_43[] = {
	{ ATF_NOFLAGS, 0, offsetof(struct weatherReport, isRaining),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_EssPrecipYesNo,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"isRaining"
		},
	{ ATF_POINTER, 4, offsetof(struct weatherReport, rainRate),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_EssPrecipRate,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"rainRate"
		},
	{ ATF_POINTER, 3, offsetof(struct weatherReport, precipSituation),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_EssPrecipSituation,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"precipSituation"
		},
	{ ATF_POINTER, 2, offsetof(struct weatherReport, solarRadiation),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_EssSolarRadiation,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"solarRadiation"
		},
	{ ATF_POINTER, 1, offsetof(struct weatherReport, friction),
		(ASN_TAG_CLASS_CONTEXT | (4 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_EssMobileFriction,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"friction"
		},
};
static ber_tlv_tag_t asn_DEF_weatherReport_tags_43[] = {
	(ASN_TAG_CLASS_CONTEXT | (20 << 2)),
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_weatherReport_tag2el_43[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* isRaining at 2133 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* rainRate at 2134 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* precipSituation at 2135 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 }, /* solarRadiation at 2136 */
    { (ASN_TAG_CLASS_CONTEXT | (4 << 2)), 4, 0, 0 } /* friction at 2137 */
};
static asn_SEQUENCE_specifics_t asn_SPC_weatherReport_specs_43 = {
	sizeof(struct weatherReport),
	offsetof(struct weatherReport, _asn_ctx),
	asn_MAP_weatherReport_tag2el_43,
	5,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	-1,	/* Start extensions */
	-1	/* Stop extensions */
};
static /* Use -fall-defs-global to expose */
asn_TYPE_descriptor_t asn_DEF_weatherReport_43 = {
	"weatherReport",
	"weatherReport",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_weatherReport_tags_43,
	sizeof(asn_DEF_weatherReport_tags_43)
		/sizeof(asn_DEF_weatherReport_tags_43[0]) - 1, /* 1 */
	asn_DEF_weatherReport_tags_43,	/* Same as above */
	sizeof(asn_DEF_weatherReport_tags_43)
		/sizeof(asn_DEF_weatherReport_tags_43[0]), /* 2 */
	0,	/* No PER visible constraints */
	asn_MBR_weatherReport_43,
	5,	/* Elements count */
	&asn_SPC_weatherReport_specs_43	/* Additional specs */
};

static asn_TYPE_member_t asn_MBR_VehicleStatus_1[] = {
	{ ATF_POINTER, 22, offsetof(struct VehicleStatus, lights),
		(ASN_TAG_CLASS_CONTEXT | (0 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_ExteriorLights,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"lights"
		},
	{ ATF_POINTER, 21, offsetof(struct VehicleStatus, lightBar),
		(ASN_TAG_CLASS_CONTEXT | (1 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_LightbarInUse,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"lightBar"
		},
	{ ATF_POINTER, 20, offsetof(struct VehicleStatus, wipers),
		(ASN_TAG_CLASS_CONTEXT | (2 << 2)),
		0,
		&asn_DEF_wipers_4,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"wipers"
		},
	{ ATF_POINTER, 19, offsetof(struct VehicleStatus, brakeStatus),
		(ASN_TAG_CLASS_CONTEXT | (3 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_BrakeSystemStatus,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"brakeStatus"
		},
	{ ATF_POINTER, 18, offsetof(struct VehicleStatus, brakePressure),
		(ASN_TAG_CLASS_CONTEXT | (4 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_BrakeAppliedPressure,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"brakePressure"
		},
	{ ATF_POINTER, 17, offsetof(struct VehicleStatus, roadFriction),
		(ASN_TAG_CLASS_CONTEXT | (5 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_CoefficientOfFriction,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"roadFriction"
		},
	{ ATF_POINTER, 16, offsetof(struct VehicleStatus, sunData),
		(ASN_TAG_CLASS_CONTEXT | (6 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SunSensor,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"sunData"
		},
	{ ATF_POINTER, 15, offsetof(struct VehicleStatus, rainData),
		(ASN_TAG_CLASS_CONTEXT | (7 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_RainSensor,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"rainData"
		},
	{ ATF_POINTER, 14, offsetof(struct VehicleStatus, airTemp),
		(ASN_TAG_CLASS_CONTEXT | (8 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_AmbientAirTemperature,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"airTemp"
		},
	{ ATF_POINTER, 13, offsetof(struct VehicleStatus, airPres),
		(ASN_TAG_CLASS_CONTEXT | (9 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_AmbientAirPressure,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"airPres"
		},
	{ ATF_POINTER, 12, offsetof(struct VehicleStatus, steering),
		(ASN_TAG_CLASS_CONTEXT | (10 << 2)),
		0,
		&asn_DEF_steering_16,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"steering"
		},
	{ ATF_POINTER, 11, offsetof(struct VehicleStatus, accelSets),
		(ASN_TAG_CLASS_CONTEXT | (11 << 2)),
		0,
		&asn_DEF_accelSets_21,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"accelSets"
		},
	{ ATF_POINTER, 10, offsetof(struct VehicleStatus, object),
		(ASN_TAG_CLASS_CONTEXT | (12 << 2)),
		0,
		&asn_DEF_object_27,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"object"
		},
	{ ATF_POINTER, 9, offsetof(struct VehicleStatus, fullPos),
		(ASN_TAG_CLASS_CONTEXT | (13 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_FullPositionVector,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"fullPos"
		},
	{ ATF_POINTER, 8, offsetof(struct VehicleStatus, throttlePos),
		(ASN_TAG_CLASS_CONTEXT | (14 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_ThrottlePosition,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"throttlePos"
		},
	{ ATF_POINTER, 7, offsetof(struct VehicleStatus, speedHeadC),
		(ASN_TAG_CLASS_CONTEXT | (15 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SpeedandHeadingandThrottleConfidence,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"speedHeadC"
		},
	{ ATF_POINTER, 6, offsetof(struct VehicleStatus, speedC),
		(ASN_TAG_CLASS_CONTEXT | (16 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_SpeedConfidence,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"speedC"
		},
	{ ATF_POINTER, 5, offsetof(struct VehicleStatus, vehicleData),
		(ASN_TAG_CLASS_CONTEXT | (17 << 2)),
		0,
		&asn_DEF_vehicleData_35,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"vehicleData"
		},
	{ ATF_POINTER, 4, offsetof(struct VehicleStatus, vehicleIdent),
		(ASN_TAG_CLASS_CONTEXT | (18 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_VehicleIdent,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"vehicleIdent"
		},
	{ ATF_POINTER, 3, offsetof(struct VehicleStatus, j1939data),
		(ASN_TAG_CLASS_CONTEXT | (19 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_J1939data,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"j1939data"
		},
	{ ATF_POINTER, 2, offsetof(struct VehicleStatus, weatherReport),
		(ASN_TAG_CLASS_CONTEXT | (20 << 2)),
		0,
		&asn_DEF_weatherReport_43,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"weatherReport"
		},
	{ ATF_POINTER, 1, offsetof(struct VehicleStatus, gpsStatus),
		(ASN_TAG_CLASS_CONTEXT | (21 << 2)),
		-1,	/* IMPLICIT tag at current level */
		&asn_DEF_GPSstatus,
		0,	/* Defer constraints checking to the member type */
		0,	/* PER is not compiled, use -gen-PER */
		0,
		"gpsStatus"
		},
};
static ber_tlv_tag_t asn_DEF_VehicleStatus_tags_1[] = {
	(ASN_TAG_CLASS_UNIVERSAL | (16 << 2))
};
static asn_TYPE_tag2member_t asn_MAP_VehicleStatus_tag2el_1[] = {
    { (ASN_TAG_CLASS_CONTEXT | (0 << 2)), 0, 0, 0 }, /* lights at 2050 */
    { (ASN_TAG_CLASS_CONTEXT | (1 << 2)), 1, 0, 0 }, /* lightBar at 2051 */
    { (ASN_TAG_CLASS_CONTEXT | (2 << 2)), 2, 0, 0 }, /* wipers at 2054 */
    { (ASN_TAG_CLASS_CONTEXT | (3 << 2)), 3, 0, 0 }, /* brakeStatus at 2060 */
    { (ASN_TAG_CLASS_CONTEXT | (4 << 2)), 4, 0, 0 }, /* brakePressure at 2076 */
    { (ASN_TAG_CLASS_CONTEXT | (5 << 2)), 5, 0, 0 }, /* roadFriction at 2077 */
    { (ASN_TAG_CLASS_CONTEXT | (6 << 2)), 6, 0, 0 }, /* sunData at 2080 */
    { (ASN_TAG_CLASS_CONTEXT | (7 << 2)), 7, 0, 0 }, /* rainData at 2081 */
    { (ASN_TAG_CLASS_CONTEXT | (8 << 2)), 8, 0, 0 }, /* airTemp at 2082 */
    { (ASN_TAG_CLASS_CONTEXT | (9 << 2)), 9, 0, 0 }, /* airPres at 2083 */
    { (ASN_TAG_CLASS_CONTEXT | (10 << 2)), 10, 0, 0 }, /* steering at 2086 */
    { (ASN_TAG_CLASS_CONTEXT | (11 << 2)), 11, 0, 0 }, /* accelSets at 2093 */
    { (ASN_TAG_CLASS_CONTEXT | (12 << 2)), 12, 0, 0 }, /* object at 2106 */
    { (ASN_TAG_CLASS_CONTEXT | (13 << 2)), 13, 0, 0 }, /* fullPos at 2113 */
    { (ASN_TAG_CLASS_CONTEXT | (14 << 2)), 14, 0, 0 }, /* throttlePos at 2115 */
    { (ASN_TAG_CLASS_CONTEXT | (15 << 2)), 15, 0, 0 }, /* speedHeadC at 2116 */
    { (ASN_TAG_CLASS_CONTEXT | (16 << 2)), 16, 0, 0 }, /* speedC at 2117 */
    { (ASN_TAG_CLASS_CONTEXT | (17 << 2)), 17, 0, 0 }, /* vehicleData at 2120 */
    { (ASN_TAG_CLASS_CONTEXT | (18 << 2)), 18, 0, 0 }, /* vehicleIdent at 2128 */
    { (ASN_TAG_CLASS_CONTEXT | (19 << 2)), 19, 0, 0 }, /* j1939data at 2130 */
    { (ASN_TAG_CLASS_CONTEXT | (20 << 2)), 20, 0, 0 }, /* weatherReport at 2133 */
    { (ASN_TAG_CLASS_CONTEXT | (21 << 2)), 21, 0, 0 } /* gpsStatus at 2140 */
};
static asn_SEQUENCE_specifics_t asn_SPC_VehicleStatus_specs_1 = {
	sizeof(struct VehicleStatus),
	offsetof(struct VehicleStatus, _asn_ctx),
	asn_MAP_VehicleStatus_tag2el_1,
	22,	/* Count of tags in the map */
	0, 0, 0,	/* Optional elements (not needed) */
	21,	/* Start extensions */
	23	/* Stop extensions */
};
asn_TYPE_descriptor_t asn_DEF_VehicleStatus = {
	"VehicleStatus",
	"VehicleStatus",
	SEQUENCE_free,
	SEQUENCE_print,
	SEQUENCE_constraint,
	SEQUENCE_decode_ber,
	SEQUENCE_encode_der,
	SEQUENCE_decode_xer,
	SEQUENCE_encode_xer,
	0, 0,	/* No PER support, use "-gen-PER" to enable */
	0,	/* Use generic outmost tag fetcher */
	asn_DEF_VehicleStatus_tags_1,
	sizeof(asn_DEF_VehicleStatus_tags_1)
		/sizeof(asn_DEF_VehicleStatus_tags_1[0]), /* 1 */
	asn_DEF_VehicleStatus_tags_1,	/* Same as above */
	sizeof(asn_DEF_VehicleStatus_tags_1)
		/sizeof(asn_DEF_VehicleStatus_tags_1[0]), /* 1 */
	0,	/* No PER visible constraints */
	asn_MBR_VehicleStatus_1,
	22,	/* Elements count */
	&asn_SPC_VehicleStatus_specs_1	/* Additional specs */
};

