@using IDTO.TravelerPortal.Models;
@using IDTO.TravelerPortal.Common;

@model IDTO.TravelerPortal.Models.Itinerary

<div id="googleMap" style="width:100%; height:350px">
</div>

<script>
    @{
        string googleMapUrlString = Config.GoogleMapLibraryUrl + "?v=3.exp&sensor=false&libraries=geometry";
      }
</script>

<script src='@googleMapUrlString'></script>

<script>
    @{
        IOrderedEnumerable<Leg> legs = Model.legs.OrderBy(l => l.startTime);
        if (legs.ElementAt(0).googlePoints != null)
        {
            @:initialize();
        }
        else
        {
            @:document.getElementById("googleMap").style.height = "0px";
        }

    }


    function initialize() {
        var mapProp = {
            zoom: 10,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

        var pinColor1 = "339933";
        var pinImage1 = new google.maps.MarkerImage('@Config.GoogleMapPinLibraryUrl' + "?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor1,
            new google.maps.Size(21, 34),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 34));
        var pinShadow1 = new google.maps.MarkerImage('@Config.GoogleMapPinLibraryUrl' + "?chst=d_map_pin_shadow",
            new google.maps.Size(40, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(12, 35));

        var pinColor2 = "FE7569";
        var pinImage2 = new google.maps.MarkerImage('@Config.GoogleMapPinLibraryUrl' + "?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor2,
            new google.maps.Size(21, 34),
            new google.maps.Point(0, 0),
            new google.maps.Point(10, 34));
        var pinShadow2 = new google.maps.MarkerImage('@Config.GoogleMapPinLibraryUrl' + "?chst=d_map_pin_shadow",
            new google.maps.Size(40, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(12, 35));

        @if (legs.ElementAt(0).googlePoints != null)
        {
            @:setupMarker(map, '@legs.ElementAt(0).googlePoints[0].Latitude', '@legs.ElementAt(0).googlePoints[0].Longitude', '@legs.ElementAt(0).from.GetName()', pinImage1, pinShadow1);
                    @:setupMarker(map, '@legs.Last().googlePoints[legs.Last().googlePoints.Count - 1].Latitude', '@legs.Last().googlePoints[legs.Last().googlePoints.Count - 1].Longitude', '@legs.Last().to.GetName()', pinImage2, pinShadow2);
                }

        var geodesicOptions = {
            strokeColor: 'yellow',
            strokeOpacity: 1.0,
            strokeWeight: 2,
            geodesic: true
        }
        geodesic = new google.maps.Polyline(geodesicOptions);
        geodesic.setMap(map);

        @{
            @:var path = geodesic.getPath();

    foreach (var leg in legs)
    {
        if (leg.googlePoints != null)
        {
            foreach (var coord in leg.googlePoints)
            {
                        @:var coordinate = new google.maps.LatLng('@coord.Latitude', '@coord.Longitude');
                                @:path.push(coordinate);
                            }
                }
            }
        }

        var bounds = new google.maps.LatLngBounds();
        var path = geodesic.getPath();
        path.forEach(function (latlng) {
            bounds.extend(latlng);
        });
        map.fitBounds(bounds);

    }


    // Setups a marker and info window on the map at the latitude and longitude specified
    function setupMarker(map, latitude, longitude, name, pinImage, pinShadow) {
        // Generate the position from the given latitude and longitude values
        var pos = new google.maps.LatLng(latitude, longitude);
        // Define the marker on the map in the specified location
        var marker = new google.maps.Marker({
            position: pos,
            map: map,
            title: name,
            icon: pinImage,
            shadow: pinShadow
        });

    }



</script>