<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IDTO.WebAPI</name>
    </assembly>
    <members>
        <member name="M:IDTO.WebAPI.App_Start.NinjectWebCommon.Start">
            <summary>
            Starts the application
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.App_Start.NinjectWebCommon.Stop">
            <summary>
            Stops the application.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.App_Start.NinjectWebCommon.CreateKernel">
            <summary>
            Creates the kernel that will manage your application.
            </summary>
            <returns>The created kernel.</returns>
        </member>
        <member name="M:IDTO.WebAPI.App_Start.NinjectWebCommon.RegisterServices(Ninject.IKernel)">
            <summary>
            Load your modules or register your services here!
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:IDTO.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,IDTO.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,IDTO.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:IDTO.WebAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},IDTO.WebAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:IDTO.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(IDTO.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,IDTO.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:IDTO.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BaseController.Log(System.Web.Http.Tracing.TraceLevel,System.String,System.String)">
            <summary>
            Logs to the TraceWriter, if available.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BlockController.GetBlocks">
            <summary>
            Get all Blocks 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BlockController.GetBlock(System.Int32)">
            <summary>
            Get Block by ID.
            GET api/Block/5
            </summary>
            <param name="id">The primary key id of the block</param>
            <returns>A BlockModel</returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BlockController.GetBlockById(System.String)">
            <summary>
            Get Block by BlockID.
            GET api/Block  load parameter by name 'blockID'
            </summary>
            <param name="blockID">The block id</param>
            <returns>BlockModel</returns>
        </member>
        <member name="T:IDTO.WebAPI.Controllers.BusStopController">
            <summary>
            Used to get information about the Bus Stops supported by the system.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BusStopController.GetStopsNearPoint(System.Single,System.Single,System.Int32)">
            <summary>
            Gets the stops near point.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.BusStopController.GetStopTimes(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            Gets the stop times.
            </summary>
            <param name="stopId">The stop identifier.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <returns></returns>
        </member>
        <member name="T:IDTO.WebAPI.Controllers.OTPController">
            <summary>
            For searching and interfacing to OTP.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.OTPController.GetTrip(System.Single,System.Single,System.String,System.Single,System.Single,System.String,System.Boolean,System.DateTime,System.Boolean,System.Single)">
            <summary>
            Search Open Trip Planner for a trip matching the criteria.
            Must enter either the lat/long of the endpoint or the string name of the lookup.
            </summary>
            <param name="startLatitude">Latitude Location of start of trip.</param>
            <param name="startLongitude">Longitude Location of start of trip.</param>
            <param name="startLocation">Instead of lat/long, enter string Location of start of trip.</param>
            <param name="endLatitude">Latitude Location of end of trip.</param>
            <param name="endLongitude">Longitude Location of end of trip.</param>
            <param name="endLocation">Instead of lat/long, enter string Location of end of trip.</param>
            <param name="searchByArriveByTime">If true, searches by Arrival Time provided in Time parameter.  If false,
            searches by Departure Time provided in Time parameter</param>
            <param name="time">Specifies either Time of Departure or Time of Arrival based on searchByDepartureTime boolean.</param>
            <param name="needWheelchairAccess">If true, require that trip selections provide for wheelchair accessiblity.</param>
            <param name="maxWalkMeters">Maximum distance in meters traveler is willing to walk between stops.</param>
            <returns>Json of the trip</returns>
        </member>
        <member name="T:IDTO.WebAPI.Controllers.ETAController">
            <summary>
            Used to get trip duration from two points using open trip planner's planning api
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.ETAController.GetEta(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the stops near point.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.ProbeController.#ctor(Repository.Providers.EntityFramework.IDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Controllers.ProbeController"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.ProbeController.#ctor(Repository.Providers.EntityFramework.IDbContext,IDTO.Common.Storage.IAzureTable{IDTO.Common.Storage.ProbeSnapshotEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Controllers.ProbeController"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="probeTable">The probe table.</param>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.ProbeController.PostProbeData(IDTO.WebAPI.Models.ProbeVehicleData)">
            <summary>
            Receives ProbeVehicleData by inbound vehicle for the latest vehicle location and saves it to the cloud.
            </summary>
            <param name="probeDataMessage"></param>
            <returns></returns>
        </member>
        <member name="T:IDTO.WebAPI.Controllers.TConnectController">
             <summary>
            
             </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TConnectController.Get(System.Int32)">
            <summary>
            Gets a status for the trip.
            </summary>
            <param name="tripid">id for trip </param>
            <returns>List of TConnect Statuses associated with trip. Though rare, a trip can have more than one TConnect.</returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TConnectController.DeduceExternalStatusForTConnect(IDTO.Entity.Models.TConnect)">
            <summary>
            The MDT wants to see status of request.
            </summary>
            <param name="tc"></param>
            <returns></returns>
        </member>
        <member name="P:IDTO.WebAPI.Controllers.TConnectStatusModel.TripId">
            <summary>
            Unique identifier created for this trip.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Controllers.TConnectStatusModel.TConnectStatusId">
            <summary>
            Enum integer for TConnectStatus from table in database.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerLocationController.PostTraveler(IDTO.WebAPI.Models.TravelerLocationModel)">
            <summary>
            Create a new TravelerLocation entry in the database.
            POST api/TravelerLocation
            </summary>
            <param name="traveler"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.GetTravelers">
            <summary>
            Get all Travelers (does not load trips)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.GetTraveler(System.Int32)">
            <summary>
            Get Traveler by TravelerID.(does not load trips)
            GET api/Traveler/5
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.GetTravelerByEmail(System.String)">
            <summary>
            Get Traveler by email.(does not load trips)
            GET api/Traveler  load parameter by name 'email'
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.GetTravelerByLoginId(System.String)">
            <summary>
            Get Traveler by loginId.(does not load trips)
            GET api/Traveler  load parameter by name 'loginid'
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.PutTraveler(System.Int32,IDTO.WebAPI.Models.TravelerModel)">
            <summary>
            Update a new Traveler in the database.
            PUT api/Traveler/5
            </summary>
            <param name="id"></param>
            <param name="traveler"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.PutTraveler(System.Int32,System.String)">
            <summary>
            Update a new Traveler in the database.
            PUT api/Traveler/5
            </summary>
            <param name="id"></param>
            <param name="testString"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TravelerController.PostTraveler(IDTO.WebAPI.Models.TravelerModel)">
            <summary>
            Create a new Traveler in the database.
            POST api/Traveler
            </summary>
            <param name="traveler"></param>
            <returns></returns>
        </member>
        <member name="T:IDTO.WebAPI.Controllers.TripController">
            <summary>
            Add Trips for Traveler to the database; Retrieve Trips for Traveler from the database
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.#ctor(Repository.Providers.EntityFramework.IDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:IDTO.WebAPI.Controllers.TripController"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.GetTrips">
            <summary>
            Get all trips
            </summary>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.GetTrip(System.Int32)">
            <summary>
            Get trip by id (and steps)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.GetTripsByUser(System.Int32,System.Nullable{IDTO.WebAPI.Models.TripType.Type})">
            <summary>
            Gets a list of trips for the traveler based on filter criteria. 
            </summary>
            <param name="travelerID">Id of the traveler</param>
            <param name="type">Enum TripType.        Upcoming=1, InProgress=2,Past=3, All=4</param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.PostTrip(IDTO.WebAPI.Models.TripModel)">
            <summary>
            Adds a new trip and steps for the specified traveler to the database.
            </summary>
            <param name="trip">trip data</param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.Controllers.TripController.DeleteTrip(System.Int32)">
            <summary>
            Delete a trip (and steps) and any linked tconnect.
             DELETE api/Trip/5
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IDTO.WebAPI.WebApiApplication.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Setting the Trace Writer
            To enable tracing, you must configure Web API to use your ITraceWriter implementation. You do this through the HttpConfiguration object,
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:IDTO.WebAPI.Models.GeoLocation">
            <summary>
            Takes address as input(any string) and returns Google's interpretation
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.GeoLocation.GeolookupResult.position">
            <summary>
            Stores lat[0] and lng[1]
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.GeoLocation.GeolookupResult.APIReturnStatus">
            <summary>
            Return text from api call
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Models.TravelerLocationModel">
            <summary>
            The location of the traveler at a point in time.
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.TravelerLocationModel.Latitude">
            <summary>
            Latitude value
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.TravelerLocationModel.Longitude">
            <summary>
            Longitude value
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.TravelerLocationModel.TimeStamp">
            <summary>
            Will be a real timestamp in UTC coming from GPS.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TravelerLocationModel.Id">
            <summary>
            Unique identifier created by the database after traveler is added.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TravelerLocationModel.UserId">
            <summary>
            User authentication id.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TravelerLocationModel.TravelerId">
            <summary>
            Unique identifier of the traveler (looked up by the backend for the supplied Userid).
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Models.PositionSnapshot">
            <summary>
            Class to hold the data relating to a position snapshot
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Latitude">
            <summary>
            Latitude value
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Longitude">
            <summary>
            Longitude value
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Speed">
            <summary>
            Speed in meters per second
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Heading">
            <summary>
            Heading value
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.TimeStamp">
            <summary>
            Timestamp in milliseconds since Jan 1st 1970
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Satellites">
            <summary>
            Number of Satellites reported by the GPS
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Accuracy">
            <summary>
            Accuracy in meters
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.PositionSnapshot.Altitude">
            <summary>
            Altitude in meters
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Models.ProbeVehicleData">
            <summary>
            Probe Vehicle Data
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.ProbeVehicleData.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.ProbeVehicleData.InboundVehicle">
            <summary>
            Inbound Vehicle string
            For CapTrans, this will be the name of the MDT (like MDT1, MDT2 etc).
            For Cabs, this will be like 1203,1204, etc.
            </summary>
        </member>
        <member name="F:IDTO.WebAPI.Models.ProbeVehicleData.Wave">
            <summary>
             Wave
             </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.Id">
            <summary>
            Unique identifier created by the database after step is added.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.TripId">
            <summary>
            Database Id of the trip this step belongs to. Will be set by the back-end for new entries.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.ModeId">
            <summary>
            Id for mode of transportation used for this step.1 Walk,2 Bus
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.StartDate">
            <summary>
            DateTime the step starts.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.EndDate">
            <summary>
            DateTime the step ends.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.FromName">
            <summary>
            Name of location where the step starts.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.FromStopCode">
            <summary>
            Optional. Code for provider bus stop where the step starts.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.FromProviderId">
            <summary>
            Optional.  Database Id for the type of provider invovled in start of the step.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.ToName">
            <summary>
            Name of location where the step ends.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.ToStopCode">
            <summary>
            Optional. Code for provider bus stop where the step ends.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.ToProviderId">
            <summary>
            Optional.  Database Id for the type of provider invovled in end of the step.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.StepModel.Distance">
            <summary>
            Distance travelled during the step.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Models.TravelerModel">
            <summary>
            Contains fields for loading a Trip to the database.
            </summary>
        </member>
        <member name="M:IDTO.WebAPI.Models.TravelerModel.ToTraveler">
            <summary>
            Converts this instance to type Traveler.
            </summary>
            <returns></returns>
        </member>
        <member name="P:IDTO.WebAPI.Models.TravelerModel.Id">
            <summary>
            Unique identifier created by the database after traveler is added.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TravelerModel.LoginId">
            <summary>
            Unique identifier to Azure authentication.
            </summary>
        </member>
        <member name="T:IDTO.WebAPI.Models.TripModel">
            <summary>
            Contains fields for loading a Trip to the database.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.Id">
            <summary>
            Unique identifier created by the database after trip is added.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.TravelerId">
            <summary>
            Foreign Key to Traveler owning this trip.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.Origination">
            <summary>
            Place where the trip starts.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.Destination">
            <summary>
            Place where trip ends.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.TripStartDate">
            <summary>
            DateTime of start of trip.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.TripEndDate">
            <summary>
            DateTime of end of trip.
            </summary>
        </member>
        <member name="P:IDTO.WebAPI.Models.TripModel.Steps">
            <summary>
            Steps comprising the trip
            </summary>
        </member>
    </members>
</doc>
