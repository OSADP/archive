// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

using IDTO.Common;
using IDTO.Common.Models;

namespace IDTO.iPhone
{

	public delegate void LogoutEventHandler();

	public partial class AccountViewController : IDTOViewController
	{
		public event LogoutEventHandler LogoutEvent;

		private string mUsername = "";
		private TravelerModel mTraveler;
		private AccountManager mACM;

		public AccountViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			setupConnectorView ();
			// Perform any additional setup after loading the view, typically from a nib.
		}

		async public override void ViewWillAppear(bool animated)
		{
			showLoading ();
			mACM =  new AccountManager();
			iOSLoginManager loginManager = iOSLoginManager.Instance;

			mUsername = loginManager.GetUsername ();

			mTraveler = await mACM.GetTravelerByEmail(mUsername);
			if (!String.IsNullOrEmpty (mTraveler.PromoCode)) {
				txtPromoCode.Text = mTraveler.PromoCode;
				btnSetPromoCode.Hidden = true;
			} else {
				btnSetPromoCode.Hidden = false;
			}

			lblUsername.Text = mUsername;

			#if DEBUG
			string versionTag = " debug";
			#else
			string versionTag = "";
			#endif
			lblVersion.Text = NSBundle.MainBundle.InfoDictionary [new NSString ("CFBundleVersion")].ToString () + versionTag;
			dismissLoading ();
		}

		private void setupConnectorView ()
		{
			this.AddConnectorView (lblAccount);

			ExtendToView = backgroundView;
		}

		async partial void SetPromoCodeAction (NSObject sender)
		{

			mTraveler.PromoCode = txtPromoCode.Text;

			try
			{
				mTraveler = await mACM.UpdateTraveler(mTraveler);
				UIAlertView alert = new UIAlertView ("Done", "Promo Code Set.", null, "OK", null);
				alert.Show();

				txtPromoCode.ResignFirstResponder();

				txtPromoCode.Enabled = false;
				btnSetPromoCode.Hidden = true;
			}catch(Exception ex)
			{
				UIAlertView alert = new UIAlertView ("Error", "Invalid Promo Code", null, "OK", null);
				alert.Show();
			}

		}

		partial void LogoutAction (MonoTouch.Foundation.NSObject sender)
		{
			iOSLoginManager loginManager = iOSLoginManager.Instance;

			loginManager.Logout();

			if(LogoutEvent!=null)
				LogoutEvent();
		}
	}
}
